// Generated by Selenium IDE
package org.ual.hmis.grupo13;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class TestcambiocontrasenaincorrectofaltadigitoTest extends Controlador {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() {
		// Browser selector
		// int browser = 0; // 0: firefox, 1: chrome, ...
		Boolean headless = false;

		switch (browser) {
		case 0: // firefox
			// Firefox
			System.setProperty("webdriver.gecko.driver", "./drivers/geckodriver.exe");
			FirefoxOptions firefoxOptions = new FirefoxOptions();
			if (headless)
				firefoxOptions.setHeadless(headless);
			driver = new FirefoxDriver(firefoxOptions);

			break;

		case 1: // chrome
			// Chrome
			System.setProperty("webdriver.chrome.driver", "./drivers/chromedriver.exe");
			ChromeOptions chromeOptions = new ChromeOptions();
			if (headless)
				chromeOptions.setHeadless(headless);
			chromeOptions.addArguments("window-size=1920,1080");
			driver = new ChromeDriver(chromeOptions);

			break;

		default:
			fail("Please select a browser");
			break;
		}
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void testcambiocontrasenaincorrectofaltadigito() {
		// Test name: test-cambio-contrasena-incorrecto-falta-digito
		// Step # | name | target | value
		// 1 | open | https://opensource-demo.orangehrmlive.com/ |
		driver.get("https://opensource-demo.orangehrmlive.com/");
		// 2 | setWindowSize | 945x1012 |
		driver.manage().window().setSize(new Dimension(945, 1012));
		// 3 | waitForElementVisible | name=username | 30000
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("username")));
		}
		// 4 | type | name=username | Admin
		driver.findElement(By.name("username")).sendKeys("Admin");
		// 5 | type | name=password | admin123
		driver.findElement(By.name("password")).sendKeys("admin123");
		// 6 | click | css=.oxd-button |
		driver.findElement(By.cssSelector(".oxd-button")).click();
		// 7 | waitForElementVisible | css=.oxd-userdropdown-name | 30000
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".oxd-userdropdown-name")));
		}
		// 8 | click | css=.oxd-userdropdown-name |
		driver.findElement(By.cssSelector(".oxd-userdropdown-name")).click();
		// 9 | click | linkText=Change Password |
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Change Password")));
		}
		driver.findElement(By.linkText("Change Password")).click();
		// 10 | waitForElementVisible | xpath=//input[@type='password'] | 30000
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type=\'password\']")));
		}
		// 11 | click | xpath=//input[@type='password'] |
		driver.findElement(By.xpath("//input[@type=\'password\']")).click();
		// 12 | type | xpath=//input[@type='password'] | admin123
		driver.findElement(By.xpath("//input[@type=\'password\']")).sendKeys("admin123");
		// 13 | type | xpath=(//input[@type='password'])[2] | hmislamejor
		driver.findElement(By.xpath("(//input[@type=\'password\'])[2]")).sendKeys("hmislamejor");
		// 14 | click | xpath=(//input[@type='password'])[3] |
		driver.findElement(By.xpath("(//input[@type=\'password\'])[3]")).click();
		// 15 | type | xpath=(//input[@type='password'])[3] | hmislamejor
		driver.findElement(By.xpath("(//input[@type=\'password\'])[3]")).sendKeys("hmislamejor");
		// 16 | click | css=.oxd-button--secondary |
		driver.findElement(By.cssSelector(".oxd-button--secondary")).click();
		// 17 | click | css=.user-password-cell |
		driver.findElement(By.cssSelector(".user-password-cell")).click();
		// 18 | waitForElementVisible | css=.oxd-input-field-error-message | 30000
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".oxd-input-field-error-message")));
		}
		// 19 | assertText | css=.oxd-input-field-error-message | Your password must
		// contain minimum 1 number
		assertThat(driver.findElement(By.cssSelector(".oxd-input-field-error-message")).getText(),
				is("Your password must contain minimum 1 number"));
		// 20 | click | css=.oxd-userdropdown-name |
		driver.findElement(By.cssSelector(".oxd-userdropdown-name")).click();
		// 21 | click | linkText=Logout |
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Logout")));
		}
		driver.findElement(By.linkText("Logout")).click();
	}
}
