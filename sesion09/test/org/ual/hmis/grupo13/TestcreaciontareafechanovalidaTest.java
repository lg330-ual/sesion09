// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestcreaciontareafechanovalidaTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testcreaciontareafechanovalida() {
    // Test name: test-creacion-tarea-fecha-no-valida
    // Step # | name | target | value
    // 1 | open | https://msdocs-core-sql-2023-ags000.azurewebsites.net/ | 
    driver.get("https://msdocs-core-sql-2023-ags000.azurewebsites.net/");
    // 2 | setWindowSize | 974x1039 | 
    driver.manage().window().setSize(new Dimension(974, 1039));
    // 3 | click | linkText=Create New | 
    driver.findElement(By.linkText("Create New")).click();
    // 4 | click | id=Description | 
    driver.findElement(By.id("Description")).click();
    // 5 | type | id=Description | Tarea con fecha no válida
    driver.findElement(By.id("Description")).sendKeys("Tarea con fecha no válida");
    // 6 | click | id=CreatedDate | 
    driver.findElement(By.id("CreatedDate")).click();
    // 7 | type | id=CreatedDate | 0004-04-04
    driver.findElement(By.id("CreatedDate")).sendKeys("0004-04-04");
    // 8 | type | id=CreatedDate | 0044-04-04
    driver.findElement(By.id("CreatedDate")).sendKeys("0044-04-04");
    // 9 | type | id=CreatedDate | 0444-04-04
    driver.findElement(By.id("CreatedDate")).sendKeys("0444-04-04");
    // 10 | type | id=CreatedDate | 4444-04-04
    driver.findElement(By.id("CreatedDate")).sendKeys("4444-04-04");
    // 11 | type | id=CreatedDate | 44444-04-04
    driver.findElement(By.id("CreatedDate")).sendKeys("44444-04-04");
    // 12 | type | id=CreatedDate | 275760-04-04
    driver.findElement(By.id("CreatedDate")).sendKeys("275760-04-04");
    // 13 | click | css=.btn | 
    driver.findElement(By.cssSelector(".btn")).click();
    // 14 | click | css=.col-md-4 | 
    driver.findElement(By.cssSelector(".col-md-4")).click();
    // 15 | assertElementPresent | css=.field-validation-error | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".field-validation-error"));
      assert(elements.size() > 0);
    }
  }
}
